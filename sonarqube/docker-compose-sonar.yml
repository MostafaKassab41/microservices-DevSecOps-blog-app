version: '3.9'

# Docker compose for SonarQube server and database with ngrok tunnel (To be used and accessed in CI/CD pipeline)

services:
  # SonarQube
  sonarqube:
    image: sonarqube:community
    container_name: sonarqube
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    ports:
      - "9000:9000"
    networks:
      - devsecops-net
    depends_on:
      - db
    restart: unless-stopped

  # PostgreSQL Database
  db:
    image: postgres:13
    container_name: sonarqube_db
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonar
    volumes:
      - postgresql_data:/var/lib/postgresql/data
    networks:
      - devsecops-net
    restart: unless-stopped

  ngrok:
    image: ngrok/ngrok:latest
    container_name: sonarqube-ngrok
    command: 
      - "http"
      - "sonarqube:9000"  # Docker service discovery
      - "--log=stdout"
    environment:
      - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN}
    ports:
      - "4040:4040"
    depends_on:
      - sonarqube
    networks:
      - devsecops-net
    restart: unless-stopped

  
networks:
  devsecops-net:

volumes:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  postgresql_data:
